# mouse mode
set -g mouse on

# use " for horizontal split and % for vertical split
unbind '"'
unbind %
bind '"' split-window -h -c "#{pane_current_path}"
bind % split-window -v -c "#{pane_current_path}"

# resize pane with +-<> like vim splits
bind + resize-pane -U 1
bind - resize-pane -D 1
bind < resize-pane -L 1
bind > resize-pane -R 1

# set prefix to 'Ctrl-\'
# unbind-key C-b
# set -g prefix 'C-\'
# bind-key 'C-\' send-prefix

# Move around panes with hjkl and arrows
bind h if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-w h" "select-pane -L"
bind j if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-w j" "select-pane -D"
bind k if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-w k" "select-pane -U"
bind l if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-w l" "select-pane -R"
bind Left  if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-w h" "select-pane -L"
bind Down  if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-w j" "select-pane -D"
bind Up    if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-w k" "select-pane -U"
bind Right if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-w l" "select-pane -R"

# Cycle windows with C-n C-p without prefix
bind -n C-n next-window
bind -n C-p previous-window

# / to search
bind-key / copy-mode \; send-key ?

# ^\ to attach floating window
bind -n C-\\ if -F '#{m/r:float,#S}' {detach} {display-popup -xC -yC -w'80%' -h'90%' -E 'tmux new-session -A -c "#{pane_current_path}" -s float'}
set-hook -g after-new-session 'if -F "#{==:#{session_name},float}" {set-option status off}'

# \ to copy current path
bind \\ run 'echo "#{pane_current_path}" | head -c -1 | tmux loadb -w -'

# Setup 'v' to begin selection, just like Vim
setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection

# Setup 'y' to yank (copy), just like Vim
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "head -c -1 | pbcopy"
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle

# r to reload config
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# monitor bell
set-option -g bell-action any # only current session is monitored
set-option -g visual-bell both

## aesthetics ##
# colors
set -ag terminal-overrides ",xterm-256color:RGB"
set -g default-terminal "screen-256color"
if 'infocmp -x tmux-256color > /dev/null 2>&1' 'set -g default-terminal "tmux-256color"'

# scroll indicator, window selection
set-option -g mode-style fg="#181a1f",bg="#c678dd",bold

# search
set-option -g copy-mode-current-match-style fg="#181a1f",bg="#c678dd",bold
set-option -g copy-mode-match-style fg="#181a1f",bg="#8a3fa0"

# status line
set -g status-left-length 30
set -g status-right-length 150
set-option -g status "on"
set-option -g status-position top

set-option -g status-style bg="#282c34",fg="#abb2bf" # bg=bg1, fg=fg1
set-window-option -g window-status-current-style fg=color167,bold # highlight current window name

# Set active pane border color
set-option -g pane-active-border-style fg="#98c379"

# Set inactive pane border color
set-option -g pane-border-style fg="#282c34"

# Clock
set-window-option -g clock-mode-colour "#73b8f1"

# Bell
set-window-option -g window-status-bell-style bg=colour167,fg=colour235 # bg=red, fg=bg

set-option -g status-left "#[fg=#181a1f, bg=#73b8f1, bold]#{?#{m/r:(copy|view)-mode,#{pane_mode}},#[bg=#c678dd],}"
set-option -ga status-left "#{?client_prefix,#[bg=colour167],}  #S "
set-option -ga status-left "#[fg=#73b8f1, bg=#282c34]#{?#{m/r:(copy|view)-mode,#{pane_mode}},#[fg=#c678dd],}#{?client_prefix,#[fg=colour167],} "
set-option -ga status-left "#{?window_zoomed_flag,🔍 ,}"
set-option -ga status-left "#{?#{m/r:#(exec tmux ls | wc -l),1},,#[fg=#abb2bf, bg=#282c34]#(exec tmux ls | grep -v #S | grep -v float | cut -d':' -f1 | tr '\\n' '|' | head -c -1) }"

set-option -g status-right "#(uptime | sed 's/.*load average.*: //'), "
set-option -ga status-right "/tmp:#(df -h /tmp | tail -n1 | grep '[0-9\.]*%%' -o | head -n1) "
if-shell 'type free > /dev/null' {set-option -ga status-right "Mem:#(free -h | grep -i mem | tr -s ' ' | cut -d' ' -f4) "}
set-option -ga status-right "#[fg=#73b8f1, bg=#282c34]#{?#{m/r:(copy|view)-mode,#{pane_mode}},#[fg=#c678dd],}#{?client_prefix,#[fg=colour167],}"
set-option -ga status-right "#[fg=#181a1f, bg=#73b8f1, bold]#{?#{m/r:(copy|view)-mode,#{pane_mode}},#[bg=#c678dd],}"
set-option -ga status-right "#{?client_prefix,#[bg=colour167],}#h"

#[fg=#abb2bf, bg=#282c34]#(exec tmux ls| cut -d ' ' -f 1-3 |tr '\\n' ',' | head -c -1) | \
##[fg=colour246, bg=#282c34] #(uptime --pretty | cut -d',' -f1 | sed "s/up.//")\
# free -h | grep -i mem | grep -o '[0-9\s]*[a-zA-Z]*$'
