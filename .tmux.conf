# mouse mode
set -g mouse on

# scrollback
set-option -g history-limit 10000

# use " for horizontal split and % for vertical split
unbind '"'
unbind %
bind '"' split-window -h -c "#{pane_current_path}"
bind % split-window -v -c "#{pane_current_path}"

# resize pane with +-<> like vim splits
bind + resize-pane -U 1
bind - resize-pane -D 1
bind < resize-pane -L 1
bind > resize-pane -R 1

# set prefix to 'Ctrl-\'
# unbind-key C-b
# set -g prefix 'C-\'
# bind-key 'C-\' send-prefix

# Move around panes with hjkl and arrows
bind h if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-w h" "select-pane -L"
bind j if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-w j" "select-pane -D"
bind k if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-w k" "select-pane -U"
bind l if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-w l" "select-pane -R"
bind Left  if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-w h" "select-pane -L"
bind Down  if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-w j" "select-pane -D"
bind Up    if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-w k" "select-pane -U"
bind Right if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-w l" "select-pane -R"

# Cycle windows with C-n C-p without prefix
bind -n C-n next-window
bind -n C-p previous-window

# / to search
bind-key / copy-mode \; send-key ?

# ^\ to attach floating window
bind -n C-\\ if -F '#{m/r:float,#S}' {detach} {display-popup -xC -yC -w'80%' -h'90%' -E 'tmux new-session -A -c "#{pane_current_path}" -s float'}
set-hook -g after-new-session 'if -F "#{==:#{session_name},float}" {set-option status off}'

# \ to copy current path
bind \\ run 'echo "#{pane_current_path}" | head -c -1 | tmux loadb -w -'

# Setup 'v' to begin selection, just like Vim
setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection

# Setup 'y' to yank (copy), just like Vim
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "head -c -1 | pbcopy"
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle

# r to reload config
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# monitor bell
set-option -g bell-action any # only current session is monitored
set-option -g visual-bell both

# clipboard
set -g set-clipboard on

set-option -sg escape-time 200
set-option -g focus-events on

## aesthetics ##
# colors
set -g default-terminal "screen-256color"
# tmux-256color supports italics
# requires compiling terminfo with system's tic
# https://gist.github.com/bbqtd/a4ac060d6f6b9ea6fe3aabe735aa9d95
if 'infocmp -x tmux-256color > /dev/null 2>&1' {
  set -g default-terminal "tmux-256color"
  set -ag terminal-features ',xterm-256color:Tc:clipboard'
}

# scroll indicator, window selection
set-option -g mode-style fg="#151820",bg="#ca72e4",bold

# search
set-option -g copy-mode-current-match-style fg="#151820",bg="#ca72e4",bold
set-option -g copy-mode-match-style fg="#151820",bg="#ca72e4"

# status line
set -g status-left-length 30
set -g status-right-length 150
set-option -g status "on"
set-option -g status-position top

set-option -g status-style bg="#242b38",fg="#7d899f" # bg=bg1, fg=fg1
set-window-option -g window-status-current-style fg=color167,bold # highlight current window name

# Set active pane border color
set-option -g pane-active-border-style fg="#97ca72"

# Set inactive pane border color
set-option -g pane-border-style fg="#151820"

# Clock
set-window-option -g clock-mode-colour "#5ab0f6"

# Bell
set-window-option -g window-status-bell-style bg="#ef5f6b",fg="#151820" # bg=red, fg=bg

set-option -g status-left "#[fg=#151820, bg=#5ab0f6, bold]#{?#{m/r:(copy|view)-mode,#{pane_mode}},#[bg=#ca72e4],}"
set-option -ga status-left "#{?client_prefix,#[bg=#ef5f6b],} Ôùï #S "
set-option -ga status-left "#[fg=#5ab0f6, bg=#242b38]#{?#{m/r:(copy|view)-mode,#{pane_mode}},#[fg=#ca72e4],}#{?client_prefix,#[fg=#ef5f6b],}ÓÇ∞ "
set-option -ga status-left "#{?window_zoomed_flag,üîç ,}"
set-option -ga status-left "#{?#{m/r:#(exec tmux ls | wc -l),1},,#[fg=#7d899f, bg=#242b38]#(exec tmux ls | grep -v #S | grep -v float | cut -d':' -f1 | tr '\\n' '|' | head -c -1) }"

set-option -g status-right "#(uptime | sed 's/.*load average.*: //'), "
set-option -ga status-right "/tmp:#(df -h /tmp | tail -n1 | grep '[0-9\.]*%%' -o | head -n1) "
if 'type free > /dev/null' {set-option -ga status-right "Mem:#(free -h | grep -i mem | tr -s ' ' | cut -d' ' -f4) "}
set-option -ga status-right "#[fg=#5ab0f6, bg=#242b38]#{?#{m/r:(copy|view)-mode,#{pane_mode}},#[fg=#ca72e4],}#{?client_prefix,#[fg=#ef5f6b],}ÓÇ≤"
set-option -ga status-right "#[fg=#151820, bg=#5ab0f6, bold]#{?#{m/r:(copy|view)-mode,#{pane_mode}},#[bg=#ca72e4],}"
set-option -ga status-right "#{?client_prefix,#[bg=#ef5f6b],}#h"
set -g window-status-format "#[fg=#5ab0f6, bg=#242b38]ÓÇ∂#[fg=#151820, bg=#5ab0f6]#I:#W#[fg=#5ab0f6, bg=#242b38]ÓÇ¥"
set -g window-status-current-format "#[fg=#97ca72, bg=#242b38]ÓÇ∂#[fg=#151820, bg=#97ca72]#I:#W#[fg=#97ca72, bg=#242b38]ÓÇ¥"

#[fg=#7d899f, bg=#242b38]#(exec tmux ls| cut -d ' ' -f 1-3 |tr '\\n' ',' | head -c -1) | \
##[fg=colour246, bg=#242b38] #(uptime --pretty | cut -d',' -f1 | sed "s/up.//")\
# free -h | grep -i mem | grep -o '[0-9\s]*[a-zA-Z]*$'

# Activate OFF mode
set-option -s command-alias[10] disable-prefix='
if "test -z $SSH_CLIENT" {
   if -F "#{pane_in_mode}" "send-keys -X cancel" {
      set prefix None 
      set key-table off 
      set status-left "#[fg=#151820, bg=#7d899f, bold] ÔÑâ #h #[fg=#7d899f, bg=#242b38]ÓÇ∞ #[fg=#242b38, bg=#7d899f]ÓÇ∞#[fg=#151820] Ôùï #S #[fg=#7d899f, bg=#242b38]ÓÇ∞" 
      set status-right "#[fg=#7d899f, bg=#242b38]ÓÇ≤#[fg=#151820, bg=#7d899f] %a %d %b #[fg=#242b38, bg=#7d899f]ÓÇ≤#[fg=#7d899f, bg=#242b38] ÓÇ≤#[fg=#151820, bg=#7d899f] %I:%M %p " 
      set window-status-current-format "#[fg=#ebc275, bg=#242b38]ÓÇ∂#[fg=#151820, bg=#ebc275]#I:#W#[fg=#ebc275, bg=#242b38]ÓÇ¥" 
      set status-position bottom 
      set status-justify centre
   }
}
'

# Disable OFF mode
set-option -s command-alias[11] restore-prefix='
    set -u prefix 
    set -u key-table 
    set -u window-status-format 
    set -u window-status-current-format 
    set -u status-right 
    set -u status-left 
    set -u status-position 
    set -u status-justify
'

bind -T root F12 disable-prefix
bind -T off F12 restore-prefix
bind -T root MouseDown1StatusRight disable-prefix
bind-key -T off MouseDown1StatusRight restore-prefix
bind-key -T off MouseDown1StatusLeft restore-prefix

bind-key -T off MouseDown1Status select-window -t =
bind-key -T off MouseDown1Pane select-pane -t = \; send-keys -M
bind-key -T off MouseDrag1Border resize-pane -M

bind-key -T off MouseDown3StatusDefault display-menu -T "#[align=centre]#{pane_index} (#{pane_id})" -t = -x M -y M "#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Top,}" < { send-keys -X history-top } "#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Bottom,}" > { send-keys -X history-bottom } '' "#{?mouse_word,Search For #[underscore]#{=/9/...:mouse_word},}" C-r { if-shell -F "#{?#{m/r:(copy|view)-mode,#{pane_mode}},0,1}" "copy-mode -t=" ; send-keys -X -t = search-backward "#{q:mouse_word}" } "#{?mouse_word,Type #[underscore]#{=/9/...:mouse_word},}" C-y { copy-mode -q ; send-keys -l "#{q:mouse_word}" } "#{?mouse_word,Copy #[underscore]#{=/9/...:mouse_word},}" c { copy-mode -q ; set-buffer "#{q:mouse_word}" } "#{?mouse_line,Copy Line,}" l { copy-mode -q ; set-buffer "#{q:mouse_line}" } '' "Horizontal Split" h { split-window -h } "Vertical Split" v { split-window -v } '' "New window" n { new-window } "Rename window" r { command-prompt -I 'rename-window ' } '' "#{?#{>:#{window_panes},1},,-}Swap Up" u { swap-pane -U } "#{?#{>:#{window_panes},1},,-}Swap Down" d { swap-pane -D } "#{?pane_marked_set,,-}Swap Marked" s { swap-pane } '' Kill X { kill-pane } Respawn R { respawn-pane -k } "#{?pane_marked,Unmark,Mark}" m { select-pane -m } "#{?#{>:#{window_panes},1},,-}#{?window_zoomed_flag,Unzoom,Zoom}" z { resize-pane -Z }
bind-key -T off MouseDown1StatusDefault new-window

# colors
# black = "#151820"
# bg0 = "#242b38"
# bg1 = "#2d3343"
# bg2 = "#343e4f"
# bg3 = "#363c51"
# bg_d = "#1e242e"
# bg_blue = "#6db9f7"
# bg_yellow = "#f0d197"
# fg = "#a5b0c5"
# purple = "#ca72e4"
# green = "#97ca72"
# orange = "#d99a5e"
# blue = "#5ab0f6"
# yellow = "#ebc275"
# cyan = "#4dbdcb"
# red = "#ef5f6b"
# grey = "#546178"
# light_grey = "#7d899f"
# dark_cyan = "#25747d"
# dark_red = "#a13131"
# dark_yellow = "#9a6b16"
# dark_purple = "#8f36a9"
